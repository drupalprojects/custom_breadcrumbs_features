<?php

// TODO run coder.
// TODO look for dpm / todos.
// TODO document functions
// TODO make sure machine_name field does not break cb when cb_features is disabled but not uninstalled.
// TODO dependencies = export panels / node types / vocabulary config etc ?

/**
 * Get a list of breadcrumb types, keyed by their associated table.
 */
function _custom_breadcrumbs_features_get_types() {
  return array(
    'custom_breadcrumb'                      => array('name' => t('Custom Breadcrumbs Node'),       'module' => 'custom_breadcrumbs'),
    'custom_breadcrumbsapi'                  => array('name' => t('Custom Breadcrumbs Api'),        'module' => 'custom_breadcrumbsapi'),
    'custom_breadcrumbs_panels'              => array('name' => t('Custom Breadcrumbs Panels'),     'module' => 'custom_breadcrumbs_panels'),
    'custom_breadcrumbs_paths'               => array('name' => t('Custom Breadcrumbs Paths'),      'module' => 'custom_breadcrumbs_paths'),
    'custom_breadcrumbs_taxonomy_term'       => array('name' => t('Custom Breadcrumbs Term'),       'module' => 'custom_breadcrumbs_taxonomy'),
    'custom_breadcrumbs_taxonomy_vocabulary' => array('name' => t('Custom Breadcrumbs Vocabulary'), 'module' => 'custom_breadcrumbs_taxonomy'),
    'custom_breadcrumbs_views'               => array('name' => t('Custom Breadcrumbs Views'),      'module' => 'custom_breadcrumbs_views'),
  );
}

/**
 * Implements hook_features_api().
 */
function custom_breadcrumbs_features_features_api() {
  $cb_types = _custom_breadcrumbs_features_get_types();

  // Keep only installed tables.
  $tables = array_filter(array_keys($cb_types), 'db_table_exists');

  $exports = array();
  foreach ($tables as $table) {
    $exports[$table] = array(
      'name' => $cb_types[$table]['name'],
      'feature_source' => TRUE,
      'default_hook' => $table . '_features_default_settings',
      'file' => drupal_get_path('module', 'custom_breadcrumbs_features') . '/includes/custom_breadcrumbs_features.features.inc',
    );
  }
  return $exports;
}


/**
 * Implements hook_form_alter().
 */
function custom_breadcrumbs_features_form_alter(&$form, &$form_state, $form_id) {
  $cb_types =  _custom_breadcrumbs_features_get_types();

  foreach ($cb_types as $table => $cb_type) {
    if ($form_id == $cb_type['module'] . '_form') {

      // If this is a breadcrumb form, tweak field 'name'.
      $form['name']['#required'] = TRUE;
      $form['name']['#attached']['js'] = array(
        drupal_get_path('module', 'custom_breadcrumbs_features') . '/js/custom_breadcrumbs_features.js',
      );

      // If this is a breadcrumb form, add field 'machine_name' .
      if (empty($form['bid']['#value'])) {
        $default_value = '';
      }
      else {
        $breadcrumb = custom_breadcrumbs_load_breadcrumbs($cb_type['module'], $table, array('bid' => $form['bid']['#value']));
        $default_value = array_pop($breadcrumb)->machine_name;
      }
      $form['machine_name'] = array(
        '#type' => 'machine_name',
        '#default_value' => $default_value,
        '#maxlength' => 32,
        '#disabled' => !empty($form['bid']['#value']),
        '#machine_name' => array(
          'exists' => "{$table}_features_load",
        ),
        '#description' => t('A unique machine-readable name for this breadcrumb. It must only contain lowercase letters, numbers, and underscores. This name will be used when featurizing breadcrumbs.'),
        '#weight' => -49,
      );

      // No need to loop over all breadcrumb types.
      break;

    }
  }

}

/**
 * Generic function to load a breadcrumb.
 */
function _custom_breadcrumbs_features_load($machine_name, $table) {
  $cb_types = _custom_breadcrumbs_features_get_types();
  $module = $cb_types[$table]['module'];
  return array_pop(custom_breadcrumbs_load_breadcrumbs($module, $table, array('machine_name' => $machine_name)));
}

// TODO declare load functions in for loop.

function custom_breadcrumb_features_load($machine_name) {
  return _custom_breadcrumbs_features_load($machine_name, 'custom_breadcrumb');
}

function custom_breadcrumbsapi_features_load($machine_name) {
  return _custom_breadcrumbs_features_load($machine_name, 'custom_breadcrumbsapi');
}

function custom_breadcrumbs_panels_features_load($machine_name) {
  return _custom_breadcrumbs_features_load($machine_name, 'custom_breadcrumbs_panels');
}

function custom_breadcrumbs_paths_features_load($machine_name) {
  return _custom_breadcrumbs_features_load($machine_name, 'custom_breadcrumbs_paths');
}

function custom_breadcrumbs_taxonomy_term_features_load($machine_name) {
  return _custom_breadcrumbs_features_load($machine_name, 'custom_breadcrumbs_taxonomy_term');
}

function custom_breadcrumbs_taxonomy_vocabulary_features_load($machine_name) {
  return _custom_breadcrumbs_features_load($machine_name, 'custom_breadcrumbs_taxonomy_vocabulary');
}

function custom_breadcrumbs_views_features_load($machine_name) {
  return _custom_breadcrumbs_features_load($machine_name, 'custom_breadcrumbs_views');
}

